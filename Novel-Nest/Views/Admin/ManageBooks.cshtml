@using Novel_Nest.Models
@model BookUserViewModel

@{
    ViewData["Title"] = "Manage Books";
}
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes">
    <link rel="stylesheet" type="" href="~/css/ManageBooks.css" />
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <title>Novel Nest</title>
</head>

<h1>Manage Books</h1>
<div class="Searchbar">
    <input type="text" class="search-bar" id="searchInput" placeholder="Filter">
</div>
<br />
<div class="list-group-books">
    @foreach (var book in Model.Books)
    {
        <ul class="list-item">
            <li>
                <div class="bookTitle">
                    <h4 class="book-title">@book.Title</h4>
                    <p>by <span class="book-author">@book.Author</span></p>
                    <strong>Current category:</strong> <span class="book-category">@book.CategoryName</span><br>
                    <strong>User:</strong> <span class="book-user">@book.UserName</span>
                </div>
                <form method="post" action="@Url.Action("EditBook", "Admin")">
                    <input type="hidden" name="Id" value="@book.Id" />
                    <input type="hidden" name="UserId" value="@book.UserId" />
                    <div class="edit-field">
                        <input type="text" placeholder="Title" name="Title" value="@book.Title" required />
                        <input type="text" placeholder="Author" name="Author" value="@book.Author" required />
                        <select name="CategoryId" required>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <button type="submit" class="btn btn-success">Save</button>
                </form>
                <form method="post" action="@Url.Action("DeleteBook", "Admin")">
                    <input type="hidden" name="bookId" value="@book.Id" />
                    <input type="hidden" name="userId" value="@book.UserId" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </li>
        </ul>
    }

</div>
<script>
    const searchInput = document.getElementById('searchInput');
    const books = document.querySelectorAll('.list-item');

    searchInput.addEventListener('input', function () {
        const searchTerm = searchInput.value.trim().toLowerCase();

        books.forEach(function (book) {
            const title = book.querySelector('.book-title').innerText.toLowerCase();
            const author = book.querySelector('.book-author').innerText.toLowerCase();
            const category = book.querySelector('.book-category').innerText.toLowerCase();
            const user = book.querySelector('.book-user').innerText.toLowerCase();

            if (title.includes(searchTerm) || author.includes(searchTerm) || category.includes(searchTerm) || user.includes(searchTerm)) {
                book.style.display = 'block';
            } else {
                book.style.display = 'none';
            }
        });
    });
</script>
