@using Models
@model BookInfoViewModel
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes">

    <link rel="stylesheet" type="text/css" href="~/css/BookInfo.css" />
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <title>Novel Nest</title>
</head>
<body>
    <div class="info-container">
        <h1>@Model.Title</h1>
        <p>Author: @Model.Author</p>
        <p>Category: @Model.CategoryName</p>
        <p>Rating: @(Model.Rating.HasValue ? Model.Rating.ToString() : "Add a book to your nightstand to give it a rating!")</p>
        <p>Review: @(String.IsNullOrEmpty(Model.Review) ? "Add a book to your nightstand to give it a review!" : Model.Review)</p>
        <p>Started at: @(Model.DateStarted == null ? "Add a book to your nightstand to give it a starting date!" : Model.DateStarted.Value.ToString("d"))</p>
        <p>Finished at: @(Model.DateFinished == null ? "Add a book to your nightstand to give it a finishing date!" : Model.DateFinished.Value.ToString("d"))</p>
        <p>Book is @(Model.Finished ? "finished" : "not finished")</p>
    </div>
</body>
</html>
